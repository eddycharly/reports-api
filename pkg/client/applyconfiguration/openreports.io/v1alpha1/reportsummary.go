// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

// ReportSummaryApplyConfiguration represents a declarative configuration of the ReportSummary type for use
// with apply.
type ReportSummaryApplyConfiguration struct {
	Pass  *int `json:"pass,omitempty"`
	Fail  *int `json:"fail,omitempty"`
	Warn  *int `json:"warn,omitempty"`
	Error *int `json:"error,omitempty"`
	Skip  *int `json:"skip,omitempty"`
}

// ReportSummaryApplyConfiguration constructs a declarative configuration of the ReportSummary type for use with
// apply.
func ReportSummary() *ReportSummaryApplyConfiguration {
	return &ReportSummaryApplyConfiguration{}
}

// WithPass sets the Pass field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Pass field is set to the value of the last call.
func (b *ReportSummaryApplyConfiguration) WithPass(value int) *ReportSummaryApplyConfiguration {
	b.Pass = &value
	return b
}

// WithFail sets the Fail field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Fail field is set to the value of the last call.
func (b *ReportSummaryApplyConfiguration) WithFail(value int) *ReportSummaryApplyConfiguration {
	b.Fail = &value
	return b
}

// WithWarn sets the Warn field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Warn field is set to the value of the last call.
func (b *ReportSummaryApplyConfiguration) WithWarn(value int) *ReportSummaryApplyConfiguration {
	b.Warn = &value
	return b
}

// WithError sets the Error field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Error field is set to the value of the last call.
func (b *ReportSummaryApplyConfiguration) WithError(value int) *ReportSummaryApplyConfiguration {
	b.Error = &value
	return b
}

// WithSkip sets the Skip field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the Skip field is set to the value of the last call.
func (b *ReportSummaryApplyConfiguration) WithSkip(value int) *ReportSummaryApplyConfiguration {
	b.Skip = &value
	return b
}
