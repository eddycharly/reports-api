// Code generated by controller-gen. DO NOT EDIT.

package v1alpha1

import (
	openreportsiov1alpha1 "github.com/openreports/reports-api/apis/openreports.io/v1alpha1"
)

// LimitsApplyConfiguration represents a declarative configuration of the Limits type for use
// with apply.
type LimitsApplyConfiguration struct {
	MaxResults   *int                                 `json:"maxResults,omitempty"`
	StatusFilter []openreportsiov1alpha1.StatusFilter `json:"statusFilter,omitempty"`
}

// LimitsApplyConfiguration constructs a declarative configuration of the Limits type for use with
// apply.
func Limits() *LimitsApplyConfiguration {
	return &LimitsApplyConfiguration{}
}

// WithMaxResults sets the MaxResults field in the declarative configuration to the given value
// and returns the receiver, so that objects can be built by chaining "With" function invocations.
// If called multiple times, the MaxResults field is set to the value of the last call.
func (b *LimitsApplyConfiguration) WithMaxResults(value int) *LimitsApplyConfiguration {
	b.MaxResults = &value
	return b
}

// WithStatusFilter adds the given value to the StatusFilter field in the declarative configuration
// and returns the receiver, so that objects can be build by chaining "With" function invocations.
// If called multiple times, values provided by each call will be appended to the StatusFilter field.
func (b *LimitsApplyConfiguration) WithStatusFilter(values ...openreportsiov1alpha1.StatusFilter) *LimitsApplyConfiguration {
	for i := range values {
		b.StatusFilter = append(b.StatusFilter, values[i])
	}
	return b
}
